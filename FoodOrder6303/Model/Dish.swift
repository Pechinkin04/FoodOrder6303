//
//  Dish.swift
//  FoodOrder6303
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—á–∏–Ω–∫–∏–Ω on 10.03.2025.
//

import Foundation
import SwiftUI

struct Dish: Identifiable, Codable {
    var id: UUID = UUID()
    
    var name:           String
    var img:            [ImageDish] // –°–ø–∏—Å–æ–∫ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    var coomposition:   String
    var ccal:           Int
    var weight:         Int
    var price:          Int
    var kitchenType:    KitchenType
    var dishType:       DishType
    
    init(id: UUID = UUID(),
         name:          String = "",
         img:           [ImageDish] = [],
         coomposition:  String = "",
         ccal:          Int = 0,
         weight:        Int = 0,
         price:         Int = 0,
         kitchenType:   KitchenType = .russian,
         dishType:      DishType = .breakfasts) {
        self.id = id
        self.name = name
        self.img = img
        self.coomposition = coomposition
        self.ccal = ccal
        self.weight = weight
        self.price = price
        self.kitchenType = kitchenType
        self.dishType = dishType
    }
}

struct ImageDish: Identifiable, Codable {
    var id: UUID = UUID()
    var imgUrl: String // –¢–æ–ª—å–∫–æ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    init(id: UUID = UUID(), imgUrl: String = "") {
        self.id = id
        self.imgUrl = imgUrl
    }
}


enum KitchenType: Identifiable, Codable, CaseIterable {
    case russian
    case french
    case asian
    case caucasian
    case italian
    case mediterranean
    case fusion
    case molecular
    
    var id: Self { self }
    
    var name: String {
        switch self {
            case .russian:       return "–†—É—Å—Å–∫–∞—è"
            case .french:        return "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è"
            case .asian:         return "–ê–∑–∏–∞—Ç—Å–∫–∞—è"
            case .caucasian:     return "–ö–∞–≤–∫–∞–∑—Å–∫–∞—è"
            case .italian:       return "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è"
            case .mediterranean: return "–°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—Å–∫–∞—è"
            case .fusion:        return "–§—å—é–∂–Ω"
            case .molecular:     return "–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è"
        }
    }
    
    var text: String {
        switch self {
            case .russian:       return "–±–æ—Ä—â, –ø–µ–ª—å–º–µ–Ω–∏, –±–ª–∏–Ω—ã, –ø–∏—Ä–æ–≥–∏, —É—Ö–∞"
            case .french:        return "—Ä–∞—Ç–∞—Ç—É–π, –ª—É–∫–æ–≤—ã–π —Å—É–ø, —Ñ—É–∞-–≥—Ä–∞, –Ω–∏—Å—É–∞–∑"
            case .asian:         return "—Å—É—à–∏, –≤–æ–∫, –¥–∏–º—Å–∞–º, –º–∏—Å–æ-—Å—É–ø"
            case .caucasian:     return "—Ö–∞—á–∞–ø—É—Ä–∏, —à–∞—à–ª—ã–∫, —Ö–∏–Ω–∫–∞–ª–∏, –ª–æ–±–∏–æ"
            case .italian:       return "–ø–∏—Ü—Ü–∞, –ª–∞–∑–∞–Ω—å—è, —Ä–∏–∑–æ—Ç—Ç–æ, —Å–ø–∞–≥–µ—Ç—Ç–∏"
            case .mediterranean: return "–º–µ–∑–∞, —Ö—É–º—É—Å, —Ä—ã–±–∞ –Ω–∞ –≥—Ä–∏–ª–µ, –≥—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç"
            case .fusion:        return "—Å–æ—á–µ—Ç–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —è–ø–æ–Ω—Å–∫–æ-—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –∫—É—Ö–Ω—è"
            case .molecular:     return "—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—ã—á–Ω—ã—Ö –≤–∫—É—Å–æ–≤—ã—Ö —Ñ–æ—Ä–º –∏ —Å–æ—á–µ—Ç–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é —Ö–∏–º–∏–∏ –∏ —Ñ–∏–∑–∏–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–≤—ë—Ä–¥—ã–π –±–æ—Ä—â –∏–ª–∏ –≤–æ–∑–¥—É—à–Ω–∞—è –ø–µ–Ω–∞ –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Ö–ª–µ–±–∞"
        }
    }
    
    var emoji: String {
        switch self {
            case .russian:       return "üá∑üá∫"
            case .french:        return "üá´üá∑"
            case .asian:         return "üáØüáµ"
            case .caucasian:     return "üá¶üá≤"
            case .italian:       return "üáÆüáπ"
            case .mediterranean: return "üá¨üá∑"
            case .fusion:        return "üåç"
            case .molecular:     return "üî¨"
        }
    }
}

enum DishType: Identifiable, Codable, CaseIterable {
    case breakfasts
    case snacks;
    case salads
    case soups
    case hotDishes
    case sideDishes
    case desserts
    
    var id: Self { self }
    
    var name: String {
        switch self {
            case .breakfasts: return "–ó–∞–≤—Ç—Ä–∞–∫–∏"
            case .snacks: return "–ó–∞–∫—É—Å–∫–∏"
            case .salads: return "–°–∞–ª–∞—Ç—ã"
            case .soups: return "–°—É–ø—ã"
            case .hotDishes: return "–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞"
            case .sideDishes: return "–ì–∞—Ä–Ω–∏—Ä—ã"
            case .desserts: return "–î–µ—Å–µ—Ä—Ç—ã"
        }
    }
    
    var emoji: String {
        switch self {
            case .breakfasts: return "ü•û"
            case .snacks: return "üçø"
            case .salads: return "ü•ó"
            case .soups: return "ü•£"
            case .hotDishes: return "üç≤"
            case .sideDishes: return "ü•ò"
            case .desserts: return "üç∞"
        }
    }
}
